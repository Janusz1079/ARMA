//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Centrala
{
	private int Current_ID
	{
		get;
		set;
	}

	public virtual Abstrakcyjna_Jednostka straznik_listy_jednostek
	{
		get;
		set;
	}

	public virtual List<Abstrakcyjna_Fabryka_Rozkazow> Lista_Fabryk_Rozkazow
	{
		get;
		set;
	}

	public virtual void Dodaj(Abstrakcyjna_Jednostka Jednostka_Do_Dodania)
	{
        Jednostka_Do_Dodania.UstawNastepnik(straznik_listy_jednostek);
        straznik_listy_jednostek = Jednostka_Do_Dodania;
    }

	public Centrala()
	{
        straznik_listy_jednostek = null;

        Current_ID = 0;
        Lista_Fabryk_Rozkazow = new List<Abstrakcyjna_Fabryka_Rozkazow>();
        Lista_Fabryk_Rozkazow.Add(new FR_Cwiczenia());
        Lista_Fabryk_Rozkazow.Add(new FR_Mobilizacja());
        Lista_Fabryk_Rozkazow.Add(new FR_Produkuj());
        Lista_Fabryk_Rozkazow.Add(new FR_DodajZasobWojskowy());

        this.Dodaj(new B_Warszawa());
        this.Dodaj(new B_Wroclaw());
        this.Dodaj(new F_Karabin());
        this.Dodaj(new F_Czolg());
        this.Dodaj(new P_Czolgista());
        this.Dodaj(new P_Zolniez());
    }

    public virtual void Odczytaj_Raport(string Raport)
    {
        Console.WriteLine(Raport);
    }

    public virtual Abstrakcyjny_Rozkaz Wytworz_rozkaz(string Tekst_Rozkazu)
    {
        string[] ParametryRozkazu = Tekst_Rozkazu.Split('|');
        foreach (Abstrakcyjna_Fabryka_Rozkazow Fabryka in Lista_Fabryk_Rozkazow)
        {
            if (Fabryka.nazwa_rozkazu == ParametryRozkazu[0])
            {
                return Fabryka.TworzRozkaz(Tekst_Rozkazu, this);
            }
        }

        return null;
    }

    public virtual void WydajRozkaz(string Tekst_Rozkazu)
	{
        
        Abstrakcyjny_Rozkaz Rozkaz = this.Wytworz_rozkaz(Tekst_Rozkazu);

        if (Rozkaz != null)
        {
            this.ZlecWykonanieRozkazu(Rozkaz);
        }
        else
        {
            Console.WriteLine("Bledna nazwa rozkazu");
        }
    }

    public virtual void ZlecWykonanieRozkazu(Abstrakcyjny_Rozkaz rozkaz)
    {
        straznik_listy_jednostek.Wykonaj(rozkaz);
    }

    public virtual string Lista_Dostepnych_Rozkazow()
    {
        string ListaDostepnychRozkazow = "";
        foreach(Abstrakcyjna_Fabryka_Rozkazow Fabryka in Lista_Fabryk_Rozkazow)
        {
            ListaDostepnychRozkazow = ListaDostepnychRozkazow + " " + Fabryka.nazwa_rozkazu;
        }
        return ListaDostepnychRozkazow;
    }

    

}

